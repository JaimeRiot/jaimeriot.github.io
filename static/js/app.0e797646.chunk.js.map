{"version":3,"sources":["src/Presentation/utils/GlobalStyles.jsx","src/Presentation/Hooks/HoveredHook.jsx","src/Presentation/components/ButtonLink/ButtonLink.jsx","src/Presentation/components/ScreenContainer/ScreenContainer.jsx","src/Presentation/components/Navigation/NavigationHeader/DataNavigationHeader.jsx","src/Presentation/screens/Home/HomeView.jsx","src/Presentation/screens/Proyects/ProyectsView.jsx","src/Presentation/screens/Notes/NotesView.jsx","src/Presentation/screens/Ideas/IdeasView.jsx","src/Presentation/screens/Libraries/LibrariesView.jsx","src/Presentation/components/ButtonReaction/ButtonReaction.jsx","src/Presentation/components/Navigation/NavigationHeader/NavigationHeader.jsx","src/Presentation/components/Loading/Loading.jsx","src/Presentation/components/Navigation/Navigator.jsx","App.js"],"names":["ThemeColors","TextColors","TextSizes","loadingSize","styles","StyleSheet","create","barMenu","backgroundColor","padding","position","left","height","width","barMenuContainer","flex","justifyContent","barMenuTitle","color","barButtonMenu","borderTopRightRadius","borderBottomRightRadius","right","bottom","marginHorizontal","screenContainer","marginLeft","buttonRoundedColor","borderRadius","buttonRoundedNoColor","buttonRoundedContainer","flexDirection","alignItems","buttonRoundedText","fontWeight","fontSize","buttonRoundedIcon","loadingContainer","loadingBox","borderColor","borderWidth","borderBottomColor","loadingCircle","buttonReactionColor","buttonReactionContainer","buttonReactionText","buttonReactionIcon","HoveredHook","React","useState","isHovered","setIsHovered","onMouseEnter","onMouseLeave","ButtonLink","to","action","title","icon","rest","useLinkProps","onPress","props","View","style","marginVertical","transitionDuration","shadowColor","shadowOpacity","shadowRadius","onClick","Text","toUpperCase","name","size","textShadowColor","textShadowOpacity","textShadowRadius","ScreenContainer","children","linking","prefixes","Linking","screensList","component","ButtonReaction","likes","setLikes","TouchableOpacity","NavigationHeader","map","views","i","screen","Loading","animation","easing","duration","iterationCount","iterationDelay","Stack","createNativeStackNavigator","NavigatorMenu","NavigationContainer","fallback","isBusy","Navigator","initialRouteName","screenOptions","header","Screen","App"],"mappings":"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","file":"static/js/app.0e797646.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\";\r\n\r\n//#region Colors\r\nconst ThemeColors = {\r\n  primary: \"#212233\",\r\n  secondary: \"#15151d\",\r\n  third: \"#5f6084\",\r\n  four: \"#19192f\",\r\n  five: \"#9695cf\",\r\n};\r\n\r\nconst TextColors = {\r\n  primary: \"#fff\",\r\n  secondary: \"#accaff\",\r\n  third: \"#b11d66\",\r\n  four: \"#9694cf\",\r\n};\r\n//#endregion\r\n\r\n//#region Sizes\r\nconst TextSizes = {\r\n  small: 10,\r\n  medium: 16,\r\n  large: 18,\r\n};\r\n\r\nconst menuSize = 180;\r\n\r\nconst loadingSize = {\r\n  micro: 20,\r\n  small: 50,\r\n  medium: 75,\r\n  large: 100,\r\n};\r\n//#endregion\r\n\r\nconst styles = StyleSheet.create({\r\n  barMenu: {\r\n    backgroundColor: ThemeColors.secondary,\r\n    padding: 15,\r\n    position: \"fixed\",\r\n    left: 0,\r\n    height: \"100%\",\r\n    width: menuSize,\r\n  },\r\n  barMenuContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  barMenuTitle: {\r\n    color: TextColors.primary,\r\n  },\r\n  barButtonMenu: {\r\n    backgroundColor: ThemeColors.secondary,\r\n    position: \"absolute\",\r\n    borderTopRightRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n    width: 30,\r\n    height: 50,\r\n    right: \"-15%\",\r\n    justifyContent:'center',\r\n    bottom: \"50%\",\r\n    marginHorizontal: \"auto\",\r\n  },\r\n  screenContainer: {\r\n    flex: 1,\r\n    backgroundColor: ThemeColors.primary,\r\n    padding: 20,\r\n    marginLeft: menuSize,\r\n  },\r\n  buttonRoundedColor: {\r\n    backgroundColor: ThemeColors.four,\r\n    padding: 8,\r\n    borderRadius: 6,\r\n  },\r\n  buttonRoundedNoColor: {\r\n    backgroundColor: \"transparent\",\r\n    padding: 8,\r\n    borderRadius: 6,\r\n  },\r\n  buttonRoundedContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonRoundedText: {\r\n    color: TextColors.four,\r\n    fontWeight: \"500\",\r\n    fontSize: TextSizes.medium,\r\n  },\r\n  buttonRoundedIcon: {\r\n    color: TextColors.four,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    position: \"relative\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: ThemeColors.primary,\r\n  },\r\n  loadingBox: {\r\n    borderColor: \"#00000050\",\r\n    borderRadius: 50,\r\n    borderWidth: 5,\r\n    borderBottomColor: ThemeColors.five,\r\n    width: loadingSize.small,\r\n    height: loadingSize.small,\r\n    position: \"absolute\",\r\n  },\r\n  loadingCircle: {\r\n    borderRadius: 50,\r\n    backgroundColor: ThemeColors.five,\r\n    width: loadingSize.micro,\r\n    height: loadingSize.micro,\r\n  },\r\n  buttonReactionColor: {\r\n    width: 50,\r\n    backgroundColor: ThemeColors.four,\r\n    padding: 4,\r\n    borderRadius: 6,\r\n  },\r\n  buttonReactionContainer: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonReactionText: {\r\n    color: TextColors.four,\r\n    fontWeight: \"500\",\r\n    fontSize: TextSizes.small,\r\n  },\r\n  buttonReactionIcon: {\r\n    color: TextColors.four,\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import React from 'react'\r\n\r\nconst HoveredHook = () => {\r\n    const [isHovered, setIsHovered] = React.useState(false);\r\n    const onMouseEnter=() => setIsHovered(true)\r\n    const onMouseLeave=() => setIsHovered(false)\r\n  return {\r\n    onMouseEnter, onMouseLeave, isHovered\r\n  }\r\n}\r\n\r\nexport default HoveredHook\r\n","import React from \"react\";\r\nimport { Text, View, TouchableOpacity } from \"react-native\";\r\nimport styles from \"../../utils/GlobalStyles\";\r\nimport { useLinkProps } from \"@react-navigation/native\";\r\nimport HoveredHook from \"../../Hooks/HoveredHook\";\r\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\r\n\r\nexport const ButtonLink = ({ to, action, title, icon, ...rest }) => {\r\n  const { onPress, ...props } = useLinkProps({ to, action });\r\n  const { onMouseEnter, onMouseLeave, isHovered } = HoveredHook();\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.buttonRoundedColor,\r\n        {\r\n          marginVertical: 8,\r\n          transitionDuration: \"150ms\",\r\n          shadowColor: \"#c58bd6\",\r\n        shadowOpacity: isHovered ? 0.8 : 0,\r\n        shadowRadius: isHovered ? 8: 0,\r\n        },\r\n      ]}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onPress}\r\n      {...props}\r\n      {...rest}\r\n    >\r\n      <View style={styles.buttonRoundedContainer}>\r\n        <Text style={styles.buttonRoundedText}>{title.toUpperCase()}</Text>\r\n        <Icon name={icon} size={20} style={[styles.buttonRoundedIcon,{\r\n            transitionDuration: \"150ms\",\r\n            textShadowColor: \"#c58bd6\",\r\n          textShadowOpacity: isHovered ? 0.8 : 0,\r\n          textShadowRadius: isHovered ? 8: 0,\r\n        }]} />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { View } from 'react-native'\r\nimport styles from '../../utils/GlobalStyles'\r\n\r\nexport const ScreenContainer = ({children}) => {\r\n  return (\r\n    <View style={styles.screenContainer}>{children}</View>\r\n  )\r\n}\r\n","import { HomeView } from \"../../../screens/Home/HomeView\";\r\nimport { ProyectView } from \"../../../screens/Proyects/ProyectsView\";\r\nimport * as Linking from \"expo-linking\";\r\nimport { NotesView } from \"../../../screens/Notes/NotesView\";\r\nimport { LibrariesView } from \"../../../screens/Libraries/LibrariesView\";\r\nimport { IdeasView } from \"../../../screens/Ideas/IdeasView\";\r\n\r\nconst prefix = Linking.createURL(\"/\");\r\n\r\nexport const linking = {\r\n  prefixes: [prefix],\r\n};\r\n\r\nconst screensList = [\r\n  {\r\n    name: \"Home\",\r\n    title: \"Inicio\",\r\n    component: HomeView,\r\n    icon: \"folder-home\",\r\n  },\r\n  {\r\n    name: \"Proyects\",\r\n    title: \"Proyectos\",\r\n    component: ProyectView,\r\n    icon: \"application-brackets\",\r\n  },\r\n  {\r\n    name: \"Notes\",\r\n    title: \"Notas\",\r\n    component: NotesView,\r\n    icon: \"note-text\",\r\n  },\r\n  {\r\n    name: \"Ideas\",\r\n    title: \"Ideas\",\r\n    component: IdeasView,\r\n    icon: \"lightbulb-on\",\r\n  },\r\n  {\r\n    name: \"Libraries\",\r\n    title: \"Librerias\",\r\n    component: LibrariesView,\r\n    icon: \"bookshelf\",\r\n  },\r\n];\r\n\r\nexport default screensList;\r\n","import React from 'react'\r\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\r\nimport { Text } from 'react-native'\r\nexport const HomeView = () => {\r\n  return (\r\n    <ScreenContainer>\r\n        <Text>Home Screen</Text>\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Text} from 'react-native'\r\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\r\nexport const ProyectView = () => {\r\n  return (\r\n    <ScreenContainer>\r\n        <Text>ProyectView</Text>\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\r\nimport { Text } from 'react-native'\r\n\r\nexport const NotesView = () => {\r\n  return (\r\n    <ScreenContainer>\r\n        <Text>NotesView</Text>\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Text } from 'react-native'\r\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\r\n\r\nexport const IdeasView = () => {\r\n  return (\r\n   <ScreenContainer>\r\n    <Text>IdeasView</Text>\r\n   </ScreenContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Text } from 'react-native'\r\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\r\n\r\nexport const LibrariesView = () => {\r\n  return (\r\n    <ScreenContainer>\r\n        <Text>LibrariesView</Text>\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Text, View, TouchableOpacity } from \"react-native\";\r\nimport styles from \"../../utils/GlobalStyles\";\r\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport HoveredHook from \"../../Hooks/HoveredHook\";\r\n\r\nexport const ButtonReaction = (props) => {\r\n  const [likes, setLikes] = React.useState(0);\r\n  const { onMouseEnter, onMouseLeave, isHovered } = HoveredHook();\r\n  function addLikes(){\r\n      setLikes(likes+1)\r\n  }\r\n  return (\r\n    <View style={{ alignItems: \"center\" }}>\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.buttonReactionColor,\r\n          {\r\n            marginVertical: 8,\r\n            transitionDuration: \"150ms\",\r\n            shadowColor: \"#c58bd6\",\r\n            shadowOpacity: isHovered ? 0.8 : 0,\r\n            shadowRadius: isHovered ? 8 : 0,\r\n          },\r\n        ]}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        onPress={() => addLikes()}\r\n      >\r\n        <View style={styles.buttonReactionContainer}>\r\n          <Icon\r\n            name={props.icon}\r\n            size={16}\r\n            style={[\r\n              styles.buttonRoundedIcon,\r\n              {\r\n                transitionDuration: \"150ms\",\r\n                textShadowColor: \"#c58bd6\",\r\n                textShadowOpacity: isHovered ? 0.8 : 0,\r\n                textShadowRadius: isHovered ? 8 : 0,\r\n              },\r\n            ]}\r\n          />\r\n          <Text style={styles.buttonReactionText}>\r\n            {likes}\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport styles from \"../../../utils/GlobalStyles\";\r\nimport { ButtonLink } from \"../../ButtonLink/ButtonLink\";\r\nimport screensList from \"./DataNavigationHeader\";\r\nimport {ButtonReaction} from \"./../../ButtonReaction/ButtonReaction\"\r\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\r\n\r\nexport const NavigationHeader = () => {\r\n  return (\r\n    <View style={styles.barMenu}>\r\n      <View style={styles.barMenuContainer}>\r\n        {screensList.map(function (views, i) {\r\n          return (\r\n            <ButtonLink key={i} title={views.title} to={{screen: views.name}} icon={views.icon}/>\r\n          );\r\n        })}\r\n        <ButtonReaction icon=\"heart-multiple\"></ButtonReaction>\r\n\r\n        </View>\r\n        <View style={styles.barButtonMenu}>\r\n        <Icon name='chevron-right-box' size={20} style={styles.buttonRoundedIcon} />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { View } from 'react-native';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport styles from '../../utils/GlobalStyles';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n          <Animatable.View animation=\"rotate\" easing=\"linear\" duration={1500} iterationCount=\"infinite\" style={styles.loadingBox}/>\r\n          <Animatable.View animation=\"rotate\" easing=\"ease-in\" iterationDelay={1500} duration={1500} iterationCount=\"infinite\" style={styles.loadingBox}/>\r\n              <Animatable.View \r\n              animation=\"pulse\" easing=\"ease-in\" duration={2000} iterationCount=\"infinite\"\r\n              style={styles.loadingCircle}>\r\n              </Animatable.View>\r\n      </View>\r\n    )\r\n}","import React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { NavigationHeader } from \"./NavigationHeader/NavigationHeader\";\r\nimport { Loading } from \"../Loading/Loading\";\r\nimport screensList, { linking } from \"./NavigationHeader/DataNavigationHeader\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport const NavigatorMenu = () =>{\r\n  return (\r\n    <NavigationContainer linking={linking} fallback={<Loading isBusy={true}/>}>\r\n      <Stack.Navigator initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        header: () => <NavigationHeader/>\r\n      }}>\r\n        {screensList.map(function (views, i) {\r\n          return (\r\n              <Stack.Screen key={i} name={views.name} component={views.component}/>\r\n          );\r\n        })}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\n","import { NavigatorMenu } from './src/Presentation/components/Navigation/Navigator';\n\nexport default function App() {\n  return (\n      <NavigatorMenu/>\n  );\n}\n"],"sourceRoot":""}